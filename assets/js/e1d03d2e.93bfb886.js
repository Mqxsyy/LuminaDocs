"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[731],{9071:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(4848),i=n(8453);const o={},a="Different Velocity Changers",s={id:"plannedFeatures/higherPriority/differentVelocityChangers",title:"Different Velocity Changers",description:"Currently this plugin really only offers one directional non chaotic velocity, unless you pair a random number node with a velocity node, but even that is not ideal.",source:"@site/docs/plannedFeatures/higherPriority/differentVelocityChangers.md",sourceDirName:"plannedFeatures/higherPriority",slug:"/plannedFeatures/higherPriority/differentVelocityChangers",permalink:"/LuminaDocs/docs/plannedFeatures/higherPriority/differentVelocityChangers",draft:!1,unlisted:!1,editUrl:"https://github.com/Mqxsyy/LuminaDocs/blob/main/docs/plannedFeatures/higherPriority/differentVelocityChangers.md",tags:[],version:"current",frontMatter:{},sidebar:"plannedFeaturesSidebar",previous:{title:"Custom Variables",permalink:"/LuminaDocs/docs/plannedFeatures/higherPriority/customVariables"},next:{title:"Physics",permalink:"/LuminaDocs/docs/plannedFeatures/higherPriority/physics"}},c={},l=[];function d(e){const t={em:"em",h1:"h1",p:"p",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"different-velocity-changers",children:"Different Velocity Changers"}),"\n",(0,r.jsxs)(t.p,{children:["Currently this plugin really only offers one directional non chaotic velocity, ",(0,r.jsx)(t.em,{children:"unless you pair a random number node with a velocity node"}),", but even that is not ideal."]}),"\n",(0,r.jsx)(t.p,{children:"I want there to be options to make particles move in a more choatic and randomized way. One such node would be turbulence."}),"\n",(0,r.jsx)(t.p,{children:"I also want there to be ones that increase control over particles in a non chaotic way. An example would be to have a node that makes the particle move towards a specific point in 3D space, and if the particle would overshoot it then it would readjust it's velocity back to that target position."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var r=n(6540);const i={},o=r.createContext(i);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);